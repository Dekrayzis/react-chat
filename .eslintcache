[{"C:\\React-Projects\\react-chat\\src\\reportWebVitals.js":"1","C:\\React-Projects\\react-chat\\src\\App.js":"2","C:\\React-Projects\\react-chat\\src\\components\\containers\\sidebar\\SideBar.js":"3","C:\\React-Projects\\react-chat\\src\\components\\elements\\Avatar\\Avatar.js":"4","C:\\React-Projects\\react-chat\\src\\components\\containers\\chatWindow\\index.js":"5","C:\\React-Projects\\react-chat\\src\\components\\elements\\buttons\\IconButton.js":"6","C:\\React-Projects\\react-chat\\src\\index.js":"7","C:\\React-Projects\\react-chat\\src\\components\\elements\\buttons\\MenuButton.js":"8","C:\\React-Projects\\react-chat\\src\\components\\containers\\chatDetails\\index.js":"9","C:\\React-Projects\\react-chat\\src\\components\\elements\\index.js":"10","C:\\React-Projects\\react-chat\\src\\components\\containers\\avatarDetails\\AvatarDetails.js":"11","C:\\React-Projects\\react-chat\\src\\components\\containers\\sidebarPanel\\SidebarPanel.js":"12","C:\\React-Projects\\react-chat\\src\\components\\elements\\buttons\\ToggleButton.js":"13","C:\\React-Projects\\react-chat\\src\\components\\containers\\channelLink\\ChannelLink.js":"14","C:\\React-Projects\\react-chat\\src\\components\\containers\\allChannels\\AllChanelsPanel.js":"15","C:\\React-Projects\\react-chat\\src\\components\\containers\\chatDetails\\UserDetails.js":"16","C:\\React-Projects\\react-chat\\src\\context\\StateProvider.js":"17","C:\\React-Projects\\react-chat\\src\\redux\\Reducer.js":"18","C:\\React-Projects\\react-chat\\src\\components\\containers\\EmojiPicker\\EmojiPicker.js":"19","C:\\React-Projects\\react-chat\\src\\components\\containers\\chatWindow\\ChatFooter.js":"20","C:\\React-Projects\\react-chat\\src\\views\\Login.js":"21","C:\\React-Projects\\react-chat\\src\\views\\Chat.js":"22","C:\\React-Projects\\react-chat\\src\\components\\elements\\modal\\FileModal.js":"23","C:\\React-Projects\\react-chat\\src\\firebase.js":"24","C:\\React-Projects\\react-chat\\src\\components\\containers\\modal\\Modal.js":"25","C:\\React-Projects\\react-chat\\src\\components\\containers\\createChat\\CreateChat.js":"26","C:\\React-Projects\\react-chat\\src\\components\\ProtectedRoute.js":"27","C:\\React-Projects\\react-chat\\src\\components\\elements\\SearchField\\SearchField.js":"28","C:\\React-Projects\\react-chat\\src\\components\\elements\\userGroup\\UserGroup.js":"29","C:\\React-Projects\\react-chat\\src\\components\\containers\\chatWindow\\SearchBar.js":"30","C:\\React-Projects\\react-chat\\src\\components\\containers\\directMessages\\DirectMessages.js":"31","C:\\React-Projects\\react-chat\\src\\components\\containers\\favourite\\Favourites.js":"32","C:\\React-Projects\\react-chat\\src\\helpers\\util.js":"33","C:\\React-Projects\\react-chat\\src\\components\\elements\\toast\\Toast.js":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"36"},{"size":1240,"mtime":1606323736046,"results":"37","hashOfConfig":"36"},{"size":2321,"mtime":1606339289639,"results":"38","hashOfConfig":"36"},{"size":239,"mtime":1606260532802,"results":"39","hashOfConfig":"36"},{"size":5103,"mtime":1606352656127,"results":"40","hashOfConfig":"36"},{"size":350,"mtime":1606272011120,"results":"41","hashOfConfig":"36"},{"size":892,"mtime":1606280433118,"results":"42","hashOfConfig":"36"},{"size":292,"mtime":1606272011124,"results":"43","hashOfConfig":"36"},{"size":9527,"mtime":1606411099383,"results":"44","hashOfConfig":"36"},{"size":357,"mtime":1606382462822,"results":"45","hashOfConfig":"36"},{"size":401,"mtime":1606302010501,"results":"46","hashOfConfig":"36"},{"size":2293,"mtime":1606336254141,"results":"47","hashOfConfig":"36"},{"size":292,"mtime":1606280433080,"results":"48","hashOfConfig":"36"},{"size":2916,"mtime":1606384764696,"results":"49","hashOfConfig":"36"},{"size":2379,"mtime":1606350106769,"results":"50","hashOfConfig":"36"},{"size":2447,"mtime":1606271689961,"results":"51","hashOfConfig":"36"},{"size":375,"mtime":1606280433090,"results":"52","hashOfConfig":"36"},{"size":1237,"mtime":1606336145155,"results":"53","hashOfConfig":"36"},{"size":1106,"mtime":1606350107966,"results":"54","hashOfConfig":"36"},{"size":3018,"mtime":1606333487151,"results":"55","hashOfConfig":"36"},{"size":934,"mtime":1606280433146,"results":"56","hashOfConfig":"36"},{"size":356,"mtime":1606383985613,"results":"57","hashOfConfig":"36"},{"size":1220,"mtime":1606280433084,"results":"58","hashOfConfig":"36"},{"size":664,"mtime":1606280433096,"results":"59","hashOfConfig":"36"},{"size":610,"mtime":1606295459661,"results":"60","hashOfConfig":"36"},{"size":1703,"mtime":1606297160062,"results":"61","hashOfConfig":"36"},{"size":669,"mtime":1606295548849,"results":"62","hashOfConfig":"36"},{"size":241,"mtime":1606272011114,"results":"63","hashOfConfig":"36"},{"size":1510,"mtime":1606320471556,"results":"64","hashOfConfig":"36"},{"size":1685,"mtime":1606332608179,"results":"65","hashOfConfig":"36"},{"size":4413,"mtime":1606336338088,"results":"66","hashOfConfig":"36"},{"size":1793,"mtime":1606340275702,"results":"67","hashOfConfig":"36"},{"size":123,"mtime":1606320131054,"results":"68","hashOfConfig":"36"},{"size":2483,"mtime":1606383432337,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"ch5dp3",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"75"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"75"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React-Projects\\react-chat\\src\\reportWebVitals.js",[],["148","149"],"C:\\React-Projects\\react-chat\\src\\App.js",[],["150","151"],"C:\\React-Projects\\react-chat\\src\\components\\containers\\sidebar\\SideBar.js",["152","153","154","155","156","157"],"C:\\React-Projects\\react-chat\\src\\components\\elements\\Avatar\\Avatar.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\chatWindow\\index.js",["158","159","160"],"/* eslint-disable jsx-a11y/img-redundant-alt */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\n//-- Elements\r\nimport Avatar from \"./../../elements/Avatar/Avatar\";\r\nimport IconButton from \"./../../elements/buttons/IconButton\";\r\n\r\n//-- Containers\r\nimport ChatDetails from \"../chatDetails\";\r\nimport AllChanelsPanel from \"../allChannels/AllChanelsPanel\";\r\n// import UserDetails from \"../chatDetails/UserDetails\";\r\n\r\nimport { useStateValue } from \"../../../context/StateProvider\";\r\n\r\n//-- Store\r\nimport db from \"../../../firebase\";\r\n\r\n//-- Styles\r\nimport \"./chatWindow.scss\";\r\nimport ChatFooter from \"./ChatFooter\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst initialSearchState = {\r\n  results: [],\r\n  query: \"\",\r\n};\r\nconst ChatWindow = () => {\r\n  const [{ user, currentChannel, showAllChannels }, dispatch] = useStateValue();\r\n  const [toggleChatDetails, setToggleChatDetails] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchModal, setSearchModal] = useState(false);\r\n  const [searchResults, setSearchResults] = useState(initialSearchState);\r\n\r\n  //-- Messages\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (currentChannel.id) {\r\n      db.collection(\"rooms\")\r\n        .doc(currentChannel.id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapShot) =>\r\n          setMessages(() => snapShot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [currentChannel.id]);\r\n\r\n  const isImage = (message) => {\r\n    return (\r\n      message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"message\")\r\n    );\r\n  };\r\n\r\n  const toggleSearchModal = (evt) => {\r\n    evt.preventDefault();\r\n    setSearchModal(!searchModal);\r\n  };\r\n\r\n  const renderMessages = () => {\r\n    const { results, query } = searchResults;\r\n    if (query !== \"\" && results.length !== 0) {\r\n      return results.map((ch) =>\r\n        // Display search results\r\n        renderMsgs(results)\r\n      );\r\n    } else if (query !== \"\" && results.length === 0) {\r\n      // Display no results\r\n      return <span className=\"noResults_msg\">No results</span>;\r\n    } else {\r\n      // Display all messages\r\n      return messages.length > 0 && renderMsgs(messages);\r\n    }\r\n  };\r\n\r\n  const renderMsgs = (arr) => {\r\n    return arr.map((msg, idx) => (\r\n      <div\r\n        key={`result-msg-${idx}`}\r\n        className={`chat__message ${\r\n          msg.name === user.displayName && \"chat__receiver\"\r\n        }`}\r\n      >\r\n        <span className=\"chat__name\">{msg.name}</span>\r\n        {isImage(msg) ? <img src={msg.image} alt=\"an image\" /> : msg.message}\r\n        <span className=\"chat__timestamp\">\r\n          {new Date(msg.timestamp?.toDate()).toUTCString()}\r\n        </span>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const resultsCallback = (res) => {\r\n    setSearchResults(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      setSearchResults(initialSearchState);\r\n      setSearchModal(false);\r\n    };\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (searchResults.query !== \"\") {\r\n      renderMessages();\r\n    }\r\n  }, [searchResults]);\r\n\r\n  return (\r\n    <>\r\n      {/* All channels panel */}\r\n      {showAllChannels && <AllChanelsPanel />}\r\n\r\n      <div className=\"chatWindow\">\r\n        {/* Chat header */}\r\n        <div className=\"chatWindow__header\">\r\n          <div className=\"chatWindow__header_left\">\r\n            <Avatar avatar=\"http://placehold.it/40x40\" />\r\n            <div className=\"chatWindow__header_info\">\r\n              <h3 className=\"chatWindow__header_name\">{currentChannel.name}</h3>\r\n              {messages[messages.length - 1] && (\r\n                <p className=\"chatWindow__header_status\">\r\n                  Last message...\r\n                  {new Date(\r\n                    messages[messages.length - 1]?.timestamp?.toDate()\r\n                  ).toUTCString()}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"chatWindow__header__right\">\r\n            <IconButton\r\n              icon=\"icon-search\"\r\n              onClick={(evt) => toggleSearchModal(evt)}\r\n            />\r\n            <IconButton\r\n              icon=\"icon-dot-3\"\r\n              onClick={() => setToggleChatDetails(!toggleChatDetails)}\r\n            />\r\n          </div>\r\n\r\n          {searchModal && (\r\n            <SearchBar\r\n              messages={messages}\r\n              toggle={searchModal}\r\n              closeModal={toggleSearchModal}\r\n              resultsCallback={resultsCallback}\r\n            />\r\n          )}\r\n        </div>\r\n\r\n        {/* Chat body */}\r\n        <div className=\"chatWindow__body\">{renderMessages()}</div>\r\n\r\n        {/* Chat footer */}\r\n        <ChatFooter channelID={currentChannel.id} />\r\n      </div>\r\n\r\n      {/* Chat details panel */}\r\n      {toggleChatDetails && (\r\n        <ChatDetails channel={currentChannel} currMsgs={messages} user={user} />\r\n      )}\r\n\r\n      {/* User details panel */}\r\n      {/* {toggleChatDetails && <UserDetails />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","C:\\React-Projects\\react-chat\\src\\components\\elements\\buttons\\IconButton.js",[],"C:\\React-Projects\\react-chat\\src\\index.js",[],["161","162"],"C:\\React-Projects\\react-chat\\src\\components\\elements\\buttons\\MenuButton.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\chatDetails\\index.js",["163"],"C:\\React-Projects\\react-chat\\src\\components\\elements\\index.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\avatarDetails\\AvatarDetails.js",[],["164","165"],"C:\\React-Projects\\react-chat\\src\\components\\containers\\sidebarPanel\\SidebarPanel.js",["166","167","168","169"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ToggleButton from \"../../elements/buttons/ToggleButton\";\r\nimport ChannelLink from \"../channelLink/ChannelLink\";\r\nimport { useStateValue } from \"../../../context/StateProvider\";\r\n\r\nimport db from \"../../../firebase\";\r\n\r\n//-- Stylesheet\r\nimport \"./sidebarPanel.scss\";\r\n\r\n// const channels = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"Assassin's Creed\",\r\n//     status: \"online\",\r\n//     user: true,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"Design\",\r\n//     status: \"away\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Games\",\r\n//     status: \"offline\",\r\n//     notifications: true,\r\n//   },\r\n// ];\r\n\r\nconst SidebarPanel = () => {\r\n  const [{ user, currentChannel, showAllChannels }, dispatch] = useStateValue();\r\n  const [toggleChannels_Panel, setShowAllChannels_Panel] = useState(true);\r\n\r\n  const [channelsRef, setChannels] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapShot) => {\r\n      setChannels(\r\n        snapShot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      );\r\n    });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setShowAllChannels_Panel(!toggleChannels_Panel);\r\n  }, [showAllChannels]);\r\n\r\n  const toggle_allchannels = () => {\r\n    dispatch({\r\n      type: \"SET_TOGGLE_ALL_CHANNELS\",\r\n      showAllChannels: !toggleChannels_Panel,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar_panel\">\r\n      <div className=\"sidebar_panel__header_title\">\r\n        <div className=\"sidebar_panel__header_left\">\r\n          <span className=\"sidebar_panel_title\">\r\n            Chats <span className=\"title_counter\">(6)</span>\r\n          </span>\r\n        </div>\r\n        <div className=\"sidebar_panel__header_right\">\r\n          <ToggleButton\r\n            label=\"See all\"\r\n            icon=\"right-open-1\"\r\n            onClick={toggle_allchannels}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_panel_area\">\r\n        {/* {channelsRef.map((ch) => (\r\n          <ChannelLink key={ch.id} channelId={ch.id} info={ch.data} />\r\n        ))} */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SidebarPanel;\r\n","C:\\React-Projects\\react-chat\\src\\components\\elements\\buttons\\ToggleButton.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\channelLink\\ChannelLink.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\allChannels\\AllChanelsPanel.js",["170"],"C:\\React-Projects\\react-chat\\src\\components\\containers\\chatDetails\\UserDetails.js",[],"C:\\React-Projects\\react-chat\\src\\context\\StateProvider.js",[],["171","172"],"C:\\React-Projects\\react-chat\\src\\redux\\Reducer.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\EmojiPicker\\EmojiPicker.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\chatWindow\\ChatFooter.js",[],"C:\\React-Projects\\react-chat\\src\\views\\Login.js",[],"C:\\React-Projects\\react-chat\\src\\views\\Chat.js",[],"C:\\React-Projects\\react-chat\\src\\components\\elements\\modal\\FileModal.js",[],"C:\\React-Projects\\react-chat\\src\\firebase.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\modal\\Modal.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\createChat\\CreateChat.js",[],"C:\\React-Projects\\react-chat\\src\\components\\ProtectedRoute.js",[],"C:\\React-Projects\\react-chat\\src\\components\\elements\\SearchField\\SearchField.js",[],"C:\\React-Projects\\react-chat\\src\\components\\elements\\userGroup\\UserGroup.js",["173","174","175","176"],"import React, { useState, useEffect } from \"react\";\r\nimport { getUniqueListBy } from \"../../../helpers/util\";\r\nimport \"./usergroup.scss\";\r\n\r\nconst UserGroup = ({ messages }) => {\r\n  const [uniqueUsers, setUniqueUsers] = useState([]);\r\n\r\n  const showUniqueUsers = (messages) => {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(\"message.name\")) {\r\n        acc.push(message.name);\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    const currUniqueUsers = getUniqueListBy(uniqueUsers, \"name\");\r\n    setUniqueUsers(\r\n      `${currUniqueUsers.length} ${\r\n        currUniqueUsers.length > 1 ? \"users\" : \"user\"\r\n      }`\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    showUniqueUsers(messages);\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"userGroup\">\r\n      <div className=\"avatars\">\r\n        <span className=\"user_avatar\">\r\n          <img src=\"https://picsum.photos/70\" />\r\n        </span>\r\n        <span className=\"user_avatar\">\r\n          <img src=\"https://picsum.photos/80\" />\r\n        </span>\r\n        <span className=\"user_avatar\">\r\n          <img src=\"https://picsum.photos/90\" />\r\n        </span>\r\n        <span className=\"user_avatar\">\r\n          <img src=\"https://picsum.photos/100\" />\r\n        </span>\r\n      </div>\r\n      {/* <div className=\"userCount\">{`${count - 4 > 0 ? \"+\" : \"\"} ${\r\n        count - 4\r\n      } user${count - 4 > 1 ? \"s\" : \"\"}`}</div> */}\r\n      <div className=\"userCount\">{uniqueUsers}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserGroup;\r\n","C:\\React-Projects\\react-chat\\src\\components\\containers\\chatWindow\\SearchBar.js",[],"C:\\React-Projects\\react-chat\\src\\components\\containers\\directMessages\\DirectMessages.js",["177","178"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\n\r\nimport ToggleButton from \"../../elements/buttons/ToggleButton\";\r\nimport ChannelLink from \"../channelLink/ChannelLink\";\r\nimport { useStateValue } from \"../../../context/StateProvider\";\r\n\r\nimport db from \"../../../firebase\";\r\n\r\n//-- Stylesheet\r\nimport \"../sidebarPanel/sidebarPanel.scss\";\r\n\r\n// const channels = [\r\n//   {\r\n//     id: 0,\r\n//     name: \"Assassin's Creed\",\r\n//     status: \"online\",\r\n//     user: true,\r\n//   },\r\n//   {\r\n//     id: 1,\r\n//     name: \"Design\",\r\n//     status: \"away\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Games\",\r\n//     status: \"offline\",\r\n//     notifications: true,\r\n//   },\r\n// ];\r\n\r\nconst DirectMessages = () => {\r\n  const [{ user, currentChannel, showAllChannels }, dispatch] = useStateValue();\r\n  const [toggleChannels_Panel, setShowAllChannels_Panel] = useState(true);\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const usersRef = firebase.database().ref(\"users\");\r\n  const connectedRef = firebase.database().ref(\".info/connected\");\r\n  const presenceRef = firebase.database().ref(\"presence\");\r\n\r\n  const addStatusToUser = (userId, connected = true) => {\r\n    const updatedUsers = users.reduce((acc, otherUser) => {\r\n      if (otherUser.uid === userId) {\r\n        otherUser[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n      }\r\n      return acc.concat(otherUser);\r\n    }, []);\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  const changeChannel = (user) => {\r\n    const channelId = getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name,\r\n    };\r\n\r\n    dispatch({\r\n      type: \"SET_CURRENT_CHANNEL\",\r\n      currentChannel: channelData,\r\n    }).then(() => {\r\n      dispatch({\r\n        type: \"SET_PRIVATE_CHANNEL\",\r\n        isPrivateChannel: true,\r\n      });\r\n    });\r\n  };\r\n\r\n  const getChannelId = (userId) => {\r\n    return userId < user.uid\r\n      ? `${userId}/${user.uid}`\r\n      : `${user.uid}/${userId}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = usersRef.on(\"child_added\", (snap) => {\r\n      let loadedUsers = [];\r\n\r\n      if (user.uid !== snap.key) {\r\n        let diffUser = snap.val();\r\n        diffUser[\"uid\"] = snap.key;\r\n        diffUser[\"status\"] = \"offline\";\r\n\r\n        loadedUsers.push(diffUser);\r\n        setUsers(loadedUsers);\r\n      }\r\n    });\r\n\r\n    const unsubConnected = connectedRef.on(\"value\", (snap) => {\r\n      if (snap.val() === true) {\r\n        const ref = presenceRef.child(user.uid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove((err) => {\r\n          console.error(err);\r\n        });\r\n      }\r\n    });\r\n\r\n    const unsubUsersAdded = presenceRef.on(\"child_added\", (snap) => {\r\n      if (user.uid !== snap.key) {\r\n        //-- add status to user\r\n        addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    const unsubUsersRemoved = presenceRef.on(\"child_removed\", (snap) => {\r\n      if (user.uid !== snap.key) {\r\n        //-- remove status to user\r\n        addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n      unsubConnected();\r\n      unsubUsersAdded();\r\n      unsubUsersRemoved();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setShowAllChannels_Panel(!toggleChannels_Panel);\r\n  }, [showAllChannels]);\r\n\r\n  const toggle_allchannels = () => {\r\n    dispatch({\r\n      type: \"SET_TOGGLE_ALL_CHANNELS\",\r\n      showAllChannels: !toggleChannels_Panel,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar_panel\">\r\n      <div className=\"sidebar_panel__header_title\">\r\n        <div className=\"sidebar_panel__header_left\">\r\n          <span className=\"sidebar_panel_title\">\r\n            Friends <span className=\"title_counter\">(2)</span>\r\n          </span>\r\n        </div>\r\n        <div className=\"sidebar_panel__header_right\">\r\n          <ToggleButton\r\n            label=\"See all\"\r\n            icon=\"right-open-1\"\r\n            onClick={toggle_allchannels}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_panel_area\">\r\n        {users.map((otherUser) => (\r\n          <ChannelLink\r\n            key={`user-${otherUser.id}`}\r\n            channelId={otherUser.id}\r\n            info={otherUser.data}\r\n            isUser\r\n            directMsg={changeChannel(otherUser)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectMessages;\r\n","C:\\React-Projects\\react-chat\\src\\components\\containers\\favourite\\Favourites.js",["179","180","181","182","183"],"import React, { useState } from \"react\";\r\n\r\n//-- Elements\r\nimport ChannelLink from \"../channelLink/ChannelLink\";\r\nimport { ToggleButton } from \"../../elements\";\r\n\r\nimport { useStateValue } from \"../../../context/StateProvider\";\r\n\r\nconst Favourites = () => {\r\n  const [{ user, currentChannel, showAllChannels }, dispatch] = useStateValue();\r\n  const [starredChannels, setStarredChannels] = useState(0);\r\n  const [activeChannel, setActiveChannel] = useState(\"\");\r\n\r\n  const changeChannel = (channel) => {\r\n    setActiveChannel(channel);\r\n    dispatch({\r\n      type: \"SET_CURRENT_CHANNEL\",\r\n      currentChannel: channel,\r\n    }).then(() => {\r\n      dispatch({\r\n        type: \"SET_PRIVATE_CHANNEL\",\r\n        isPrivateChannel: false,\r\n      });\r\n    });\r\n  };\r\n\r\n  const displayChannels = (starredChannels) => {\r\n    starredChannels.length > 0 &&\r\n      starredChannels.map((channel) => (\r\n        <ChannelLink\r\n          key={`user-${channel.id}`}\r\n          channelId={channel.id}\r\n          info={channel.data}\r\n          onClick={changeChannel(channel)}\r\n          active={channel.id === activeChannel}\r\n        />\r\n      ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"sidebar_panel\">\r\n      <div className=\"sidebar_panel__header_title\">\r\n        <div className=\"sidebar_panel__header_left\">\r\n          <span className=\"sidebar_panel_title\">\r\n            Favourites <span className=\"title_counter\">(0)</span>\r\n          </span>\r\n        </div>\r\n        <div className=\"sidebar_panel__header_right\">\r\n          <ToggleButton\r\n            label=\"See all\"\r\n            icon=\"right-open-1\"\r\n            // onClick={toggle_allchannels}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar_panel_area\">{displayChannels}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Favourites;\r\n","C:\\React-Projects\\react-chat\\src\\helpers\\util.js",[],"C:\\React-Projects\\react-chat\\src\\components\\elements\\toast\\Toast.js",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"184","replacedBy":"188"},{"ruleId":"186","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":20},{"ruleId":"190","severity":1,"message":"194","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":18},{"ruleId":"190","severity":1,"message":"195","line":11,"column":22,"nodeType":"192","messageId":"193","endLine":11,"endColumn":32},{"ruleId":"190","severity":1,"message":"196","line":21,"column":18,"nodeType":"192","messageId":"193","endLine":21,"endColumn":32},{"ruleId":"190","severity":1,"message":"197","line":21,"column":34,"nodeType":"192","messageId":"193","endLine":21,"endColumn":49},{"ruleId":"190","severity":1,"message":"198","line":21,"column":53,"nodeType":"192","messageId":"193","endLine":21,"endColumn":61},{"ruleId":"190","severity":1,"message":"198","line":29,"column":53,"nodeType":"192","messageId":"193","endLine":29,"endColumn":61},{"ruleId":"190","severity":1,"message":"199","line":31,"column":10,"nodeType":"192","messageId":"193","endLine":31,"endColumn":17},{"ruleId":"190","severity":1,"message":"200","line":31,"column":19,"nodeType":"192","messageId":"193","endLine":31,"endColumn":29},{"ruleId":"184","replacedBy":"201"},{"ruleId":"186","replacedBy":"202"},{"ruleId":"190","severity":1,"message":"203","line":3,"column":8,"nodeType":"192","messageId":"193","endLine":3,"endColumn":16},{"ruleId":"184","replacedBy":"204"},{"ruleId":"186","replacedBy":"205"},{"ruleId":"190","severity":1,"message":"206","line":4,"column":8,"nodeType":"192","messageId":"193","endLine":4,"endColumn":19},{"ruleId":"190","severity":1,"message":"207","line":33,"column":12,"nodeType":"192","messageId":"193","endLine":33,"endColumn":16},{"ruleId":"190","severity":1,"message":"196","line":33,"column":18,"nodeType":"192","messageId":"193","endLine":33,"endColumn":32},{"ruleId":"190","severity":1,"message":"208","line":36,"column":10,"nodeType":"192","messageId":"193","endLine":36,"endColumn":21},{"ruleId":"190","severity":1,"message":"199","line":13,"column":10,"nodeType":"192","messageId":"193","endLine":13,"endColumn":17},{"ruleId":"184","replacedBy":"209"},{"ruleId":"186","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":32,"column":11,"nodeType":"213","endLine":32,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":35,"column":11,"nodeType":"213","endLine":35,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":38,"column":11,"nodeType":"213","endLine":38,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":41,"column":11,"nodeType":"213","endLine":41,"endColumn":50},{"ruleId":"190","severity":1,"message":"214","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":10},{"ruleId":"190","severity":1,"message":"196","line":35,"column":18,"nodeType":"192","messageId":"193","endLine":35,"endColumn":32},{"ruleId":"190","severity":1,"message":"207","line":10,"column":12,"nodeType":"192","messageId":"193","endLine":10,"endColumn":16},{"ruleId":"190","severity":1,"message":"196","line":10,"column":18,"nodeType":"192","messageId":"193","endLine":10,"endColumn":32},{"ruleId":"190","severity":1,"message":"197","line":10,"column":34,"nodeType":"192","messageId":"193","endLine":10,"endColumn":49},{"ruleId":"190","severity":1,"message":"215","line":11,"column":10,"nodeType":"192","messageId":"193","endLine":11,"endColumn":25},{"ruleId":"190","severity":1,"message":"216","line":11,"column":27,"nodeType":"192","messageId":"193","endLine":11,"endColumn":45},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],["217"],["218"],"no-unused-vars","'SidebarPanel' is defined but never used.","Identifier","unusedVar","'Favourites' is defined but never used.","'IconButton' is defined but never used.","'currentChannel' is assigned a value but never used.","'showAllChannels' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.",["217"],["218"],"'firebase' is defined but never used.",["217"],["218"],"'ChannelLink' is defined but never used.","'user' is assigned a value but never used.","'channelsRef' is assigned a value but never used.",["217"],["218"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'db' is defined but never used.","'starredChannels' is assigned a value but never used.","'setStarredChannels' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]